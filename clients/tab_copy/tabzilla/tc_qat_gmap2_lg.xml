Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="VOLC_REG_FILES_ARCHIVE">
<globals> 
 
	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="SYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="~"></param>
	    
	  <param name="FROM_DB" value="%LG_GMAP2%"></param>
	  <param name="FROM_SCHEMA" value="C164758RAP"></param>
	  
	  <param name="TO_DB" value="%C164758RAP_GMAD1%"></param>
	  <param name="TO_SCHEMA" value="C164758RAP"></param>	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->

                        --use these 2 to ensure index maintenance in DIRECT non-parallel mode load mode
                        <param name="SKIP_INDEX_MAINTENANCE" value="TRUE"></param>


                        <param name="DPL_BINDSIZE" value="100000"></param>
                        --use this to REBUILD unusable indexes.
                        <param name="IF_REBUILD_UNUSABLE_INDEXES" value="1"></param>
</globals>


<worker name="QQ1">
  <exec_dml>
    <sqlp 	method="%COPY_METHOD%" >
	 <param name="NUM_OF_SHARDS" value=""></param>
     <param name="IF_DPL_SERIAL" value="0"></param>
	 <param name="TO_TABLE1" value="VOLC_REG_FILES_ARCHIVE_PROD"></param>

     <sql_template>
        <![CDATA[(select * from C164758RAP.VOLC_REG_FILES_ARCHIVE)]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

</etldataflow>

