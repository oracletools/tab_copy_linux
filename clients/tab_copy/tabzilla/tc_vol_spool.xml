<etldataflow name="SPOOL_CSMARTVOL_MGMT_REPORTS">
<globals>
	  <param name="FIELD_TERMINATOR" value='|'></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  <param name="FROM_DB" value="%AB_SMARTP1B%"></param>	  
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="10000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
</globals>

<worker name="TRD_VOL_DLY_SMRY_AUG_101">
  <exec_spool>
    <sqlp  method="%SPOOL_METHOD%" >
      <sql_template>
        <![CDATA[ SELECT * FROM (SELECT   DISTINCT   TRD_VOL_DLY_SMRY.SRC_FILE_CD,  TRD_VOL_DLY_SMRY.COB_DT,  TRD_VOL_DLY_SMRY.METRICS_CAT,  REF_MNGD_SEG_HIER.GOC_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_5_DESCR,
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_6_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_7_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_8_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_9_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_10_DESCR,
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_11_DESCR,  MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,  MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,  MAN_REF_ASET_LVL_DATA.ASET_LVL_2_DESC,  MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN,
  REF_MNGD_SEG_HIER.GOC_RGN_DESCR,  TRD_VOL_DLY_SMRY.FEED_SRC_SYS ,  SUM(TRD_VOL_DLY_SMRY.fo_os_trd_cnt),  SUM(TRD_VOL_DLY_SMRY.fo_new_trd_cnt),  SUM(TRD_VOL_DLY_SMRY.CALC_USD_AMT),  SUM(TRD_VOL_DLY_SMRY.OS_NEW_TRD_CNT),
  SUM(TRD_VOL_DLY_SMRY.ITEM_CNT),    SUM(TRD_VOL_DLY_SMRY.FO_OUTRT_CANC_TRD_CNT),  SUM(TRD_VOL_DLY_SMRY.CON_QTY)  
  FROM CSMARTVOL.TRD_VOL_DLY_SMRY PARTITION (AUG_101) TRD_VOL_DLY_SMRY,  CSMARTREF.REF_MNGD_SEG_HIER, CSMARTREF.MAN_REF_ASET_LVL_DATA,  CSMARTREF.MAN_REF_LGL_ENTY_DATA,  CSMARTREF.MAN_REF_LGL_ENTY_XREF
  WHERE 
	( MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID  =MAN_REF_LGL_ENTY_DATA.LGL_ENTY_ID(+) )	AND ( REF_MNGD_SEG_HIER.GOC(+)             =TRD_VOL_DLY_SMRY.FO_GOC )
	AND ( MAN_REF_LGL_ENTY_XREF.LGL_ENTY_KEY(+)=TRD_VOL_DLY_SMRY.LGL_ENTY_KEY )	AND ( TRD_VOL_DLY_SMRY.ASET_LVL_KEY        =MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY(+) 
        AND MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC IN ('Equity', 'Fixed Income', 'Exchange Traded Derivatives')        AND MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC != 'Future' )
	AND ( TRD_VOL_DLY_SMRY.SRC_FILE_CD        IN ( 'TMLSMB','TMLSALO' ))	AND TRD_VOL_DLY_SMRY.METRICS_CAT        ='Volumes'
  GROUP BY 
  TRD_VOL_DLY_SMRY.SRC_FILE_CD,   TRD_VOL_DLY_SMRY.COB_DT,  TRD_VOL_DLY_SMRY.METRICS_CAT,  REF_MNGD_SEG_HIER.GOC_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_5_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_6_DESCR,
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_7_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_8_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_9_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_10_DESCR,  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_11_DESCR,
  MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,  MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,  MAN_REF_ASET_LVL_DATA.ASET_LVL_2_DESC,  MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN,  REF_MNGD_SEG_HIER.GOC_RGN_DESCR,  TRD_VOL_DLY_SMRY.FEED_SRC_SYS) A;
    ]]>
      </sql_template>
    </sqlp>
  </exec_spool>
</worker>

<!--worker name="TRD_VOL_DLY_SMRY_AUG_102">
  <exec_spool>
    <sqlp  method="%SPOOL_METHOD%" >
      <sql_template>
        <![CDATA[ SELECT DISTINCT TRD_VOL_DLY_SMRY.SRC_FILE_CD, TRD_VOL_DLY_SMRY.COB_DT, TRD_VOL_DLY_SMRY.METRICS_CAT, REF_MNGD_SEG_HIER.GOC_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_5_DESCR, 
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_6_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_7_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_8_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_9_DESCR, 
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_10_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_11_DESCR, MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC, MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC, 
  MAN_REF_ASET_LVL_DATA.ASET_LVL_2_DESC, MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN, REF_MNGD_SEG_HIER.GOC_RGN_DESCR, TRD_VOL_DLY_SMRY.FEED_SRC_SYS , SUM(TRD_VOL_DLY_SMRY.fo_os_trd_cnt), 
  SUM(TRD_VOL_DLY_SMRY.fo_new_trd_cnt), SUM(TRD_VOL_DLY_SMRY.CALC_USD_AMT), SUM(TRD_VOL_DLY_SMRY.OS_NEW_TRD_CNT), SUM(TRD_VOL_DLY_SMRY.ITEM_CNT), SUM(TRD_VOL_DLY_SMRY.FO_OUTRT_CANC_TRD_CNT), 
  SUM(TRD_VOL_DLY_SMRY.CON_QTY) FROM CSMARTVOL.TRD_VOL_DLY_SMRY PARTITION (AUG_102) TRD_VOL_DLY_SMRY, 
  CSMARTREF.REF_MNGD_SEG_HIER, CSMARTREF.MAN_REF_ASET_LVL_DATA, CSMARTREF.MAN_REF_LGL_ENTY_DATA, CSMARTREF.MAN_REF_LGL_ENTY_XREF 
WHERE  ( MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID  =MAN_REF_LGL_ENTY_DATA.LGL_ENTY_ID(+) ) AND ( REF_MNGD_SEG_HIER.GOC(+)             =TRD_VOL_DLY_SMRY.FO_GOC ) 
	AND ( MAN_REF_LGL_ENTY_XREF.LGL_ENTY_KEY(+)=TRD_VOL_DLY_SMRY.LGL_ENTY_KEY ) AND ( TRD_VOL_DLY_SMRY.ASET_LVL_KEY        =MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY(+)  
        AND MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC IN ('Equity', 'Fixed Income', 'Exchange Traded Derivatives') AND MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC != 'Future' ) 
	AND ( TRD_VOL_DLY_SMRY.SRC_FILE_CD        IN ( 'TMLSMB','TMLSALO' ) AND TRD_VOL_DLY_SMRY.METRICS_CAT        ='Volumes' 
GROUP BY    TRD_VOL_DLY_SMRY.SRC_FILE_CD, TRD_VOL_DLY_SMRY.COB_DT, TRD_VOL_DLY_SMRY.METRICS_CAT, REF_MNGD_SEG_HIER.GOC_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_5_DESCR, 
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_6_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_7_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_8_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_9_DESCR, 
  REF_MNGD_SEG_HIER.MNGD_SEG_LVL_10_DESCR, REF_MNGD_SEG_HIER.MNGD_SEG_LVL_11_DESCR, MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC, MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC, 
  MAN_REF_ASET_LVL_DATA.ASET_LVL_2_DESC, MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN, REF_MNGD_SEG_HIER.GOC_RGN_DESCR, TRD_VOL_DLY_SMRY.FEED_SRC_SYS
    ]]>
      </sql_template>
    </sqlp>
  </exec_spool>
</worker-->


</etldataflow>
