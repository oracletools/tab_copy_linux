<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SMC_SPOOL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
  
	  <param name="FROM_DB" value="%DL_GMAU%"></param>
	  <param name="FROM_DB1" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="DLROGMARWSMART"></param>
	  <param name="DB_CONNECTOR1" value="%DL_GMAU%"></param>
	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
		
		
	  <param name="SOURCE_FILE" value="--replaced from command line"></param>	
	  <param name="COB_YEAR" value="--replaced from command line"></param>

</globals>



<worker name="SMC_PRODUCT">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_PRODUCT
/
		
insert --+append
into SMC_PRODUCT
  select --+ parallel(4) index_ffs_(P PK_PRODUCT  ) drivin_site(ss)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  P
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE)
end;
/
*/


]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker>

<worker1 name="ins_P_hash_0">
  <exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
--truncate table del_rev_hash
--/
		
 insert --+ append 
 into smc_product_reduced partition(p_0)
select /*+ use_hash */ * from smc_product_sharded partition(p_0) p
where exists (SELECT /*+ INDEX_FFS(SLU) */ 1  FROM SMC_SECURITY_LAST_UPDATE --partition(rev_0) 
SLU where p.smc_prod_id=slu.smcp)

/

commit
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1>


--2 min
<worker1 name="ins_P_hash_0">
  <exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
--truncate table del_rev_hash
--/
		
 insert --+ append 
 into smc_product_reduced partition(p_0)
select /*+ use_hash */ * from smc_product_sharded partition(p_0) p
where exists (SELECT /*+ INDEX(SLU) */ 1  FROM SMC_SECURITY_LAST_UPDATE --partition(rev_0) 
SLU where p.smc_prod_id=slu.smcp)

/

commit
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1>


--13 sec
<worker1 name="ins_P_hash_0">
  <exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
--truncate table del_rev_hash
--/
		
 insert --+ append 
 into smc_product_reduced subpartition(rev_0_0)
select /*+ use_hash */ * from smc_product_sharded subpartition(rev_0_0) p
where exists (SELECT /*+ INDEX(SLU) */ 1  FROM SMC_SECURITY_LAST_UPDATE partition(rev_0) SLU where p.smc_prod_id=slu.smcp)

/

commit
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1>



<worker1 name="SMC_3t">
  <exec_query_spool>
    <table_utils 	method="%QUERY_SPOOL_METHOD%" >
     	<param name="IF_COMPRESSED_SPOOL" value="0"></param>
		<param name="DB_CONNECTOR1" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="FROM_DB" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[ 
select /*+ use_hash */ * from smc_product_sharded subpartition(rev_0_0) p
where exists (SELECT /*+ INDEX(SLU) */ 1  FROM SMC_SECURITY_LAST_UPDATE partition(rev_0) SLU where p.smc_prod_id=slu.smcp)
	  ;
]]>
      </sql_template>
    </table_utils>
  </exec_query_spool>
</worker1>

<worker1 name="ins_P_hash_0">
  <exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table del_rev_hash
/
		
 insert --+ append 
 into del_rev_hash partition(rev_0)
select --+parallel(4)
p.* from SMC_PRODUCT partition(rev_0) p, SMC_SECURITY_LAST_UPDATE partition(rev_0) ss 
 where p.SMC_PROD_ID = ss.smcp 
/

commit
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1>


<worker1 name="ins_P_hash_0">
  <exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table del_rev_hash
/
		
 insert --+ append 
 into del_rev_hash partition(rev_0)
select --+parallel
p.* from smc_product_sharded subpartition(rev_0_0) p
where exists (SELECT /*+ FULL(SLU) */ 1  FROM SMC_SECURITY_LAST_UPDATE partition(rev_0) SLU where p.smc_prod_id=slu.smcp) 
/

commit
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1>



<worker1 name="SMC_PRODUCT_SHARDED">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append 
into SMC_PRODUCT
  select --+ parallel(4) index_ffs_(P PK_PRODUCT  ) drivin_site(ss)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT,
substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  P
--where --substr(reverse(p.smcp),1,1)='0'
--p.ROWID BETWEEN 'AACKUuAAYAAHqFpAA/' AND 'AACKUuAAaAAIcTFAAp'
/

--where p.ROWID BETWEEN 'AACKUuAAKAAA9iIAAA' AND 'AACKUuAANAAGCFiAAo'


begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/



]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker1 name="SMC_PRODUCT_SHARDED">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_PRODUCT_SHARDED PARTITION(p_0)
  select --+ parallel(4) FULL(P) drivins_site(P)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev, 0
from   C160970SMC.PRODUCT@gmail.com  
P
where p.ROWID BETWEEN 'AACKUuAAKAAA9iIAAA' AND 'AACKUuAANAAGCFiAAo'
/

begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/



]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker1 name="SMC_PRODUCT_SHARDED_1">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_PRODUCT_SHARDED PARTITION(p_1)
  select --+ parallel(4) FULL(P) driving_site(P)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev, 1
from   C160970SMC.PRODUCT@gmail.com  
P
where p.ROWID BETWEEN 'AACKUuAAYAAHqFpABA' AND 'AACKUuAAbAAI1enAAt'
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>





<worker1 name="SMC_PRODUCT_SHARDED_2">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_PRODUCT_SHARDED PARTITION(p_2)
  select --+ parallel(4) FULL(P) drivins_site(P)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev, 2
from   C160970SMC.PRODUCT@gmail.com  
P
where p.ROWID BETWEEN 'AACKUuAANAAGCFjAAA' AND 'AACKUuAAYAAHqFpAA/'
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>

<worker1 name="SMC_PRODUCT_SHARDED_3">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_PRODUCT_SHARDED PARTITION(p_3)
  select --+ parallel(4) FULL(P) drivins_site(P)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev, 3
from   C160970SMC.PRODUCT@gmail.com  
P
where p.ROWID BETWEEN 'AACKUuAAbAAI1enAAu' AND 'AACKUuAAfAAMsh/AAz'
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>

<worker1 name="SMC_PRODUCT">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_PRODUCT
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_PRODUCT
select --+ parallel(4) CACHE(ss) driving_site(P)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  
P,
(SELECT
        /*+ PARALLEL(SLU, 4) FULL(SLU)*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  
      SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) ss
      where P.SMCP=ss.smcp
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>



<worker1 name="SMC_PRODUCT">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_PRODUCT
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_PRODUCT
  select --+ parallel(4) index_ffs_(P PK_PRODUCT  ) drivin_site(ss)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  
P
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>



</etldataflow>
