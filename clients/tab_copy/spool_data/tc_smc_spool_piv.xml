<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SMC_SPOOL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
  
	  <param name="FROM_DB" value="%DL_GMAU%"></param>
	  <param name="FROM_DB1" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="DLROGMARWSMART"></param>
	  <param name="DB_CONNECTOR1" value="%DL_GMAU%"></param>
	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
		
		
	  <param name="SOURCE_FILE" value="--replaced from command line"></param>	
	  <param name="COB_YEAR" value="--replaced from command line"></param>

</globals>




-- 2m46.440s
<worker name="SMC_3t">
  <exec_query_spool>
    <table_utils 	method="%QUERY_SPOOL_METHOD%" >
     	<param name="IF_COMPRESSED_SPOOL" value="0"></param>
		<param name="DB_CONNECTOR1" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="FROM_DB1" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME1" value="CSMARTREF"></param>
	  <param name="FROM_SCHEMA" value="DLROGMARWSMART"></param>
	  <param name="DB_CONNECTOR" value="%DL_GMAU%"></param>		
      <sql_template>
        <![CDATA[ 
SELECT
        /*+ PARALLEL(4)  */
        Slu.SMCP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GMIT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GMI,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'ISN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS ISN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'RIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS RIC,
        MAX(
        CASE
          WHEN X.XREFCODE = 'SDL'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS SDL,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CCD'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CCD,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBPK'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBPK,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BUN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BUN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BCSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BCSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBT,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GRIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GRIC 
      FROM (select --+full(x)
       * from C160970SMC.XREF x where DFLAG   = 'N'   
      AND XREFCODE IN ('BUN','BCSP','BBPK','CCD','SDL','RIC','ISN','CSP','GMIT','BBT','GRIC')) --@gmail.com
       X,C160970SMC.SECURITY_LAST_UPDATE --@gmail.com 
        SLU
      WHERE  DDAMODIFIEDTS > sysdate-1 and  Slu.SMCP = x.SMCP(+)      
      GROUP BY Slu.SMCP
	  ;
]]>
      </sql_template>
    </table_utils>
  </exec_query_spool>
</worker>







</etldataflow>
