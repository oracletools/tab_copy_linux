<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SMC_SPOOL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
  
	  <param name="FROM_DB" value="%DL_GMAU%"></param>
	  <param name="FROM_DB1" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="DLROGMARWSMART"></param>
	  <param name="DB_CONNECTOR1" value="%DL_GMAU%"></param>
	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
		
		
	  <param name="SOURCE_FILE" value="--replaced from command line"></param>	
	  <param name="COB_YEAR" value="--replaced from command line"></param>

</globals>


  
<worker name="SMC_MR_II_C_E_P">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table ab_GTT_REF_SMC1
/

--ALTER SESSION ENABLE PARALLEL DML
--/

alter session set COMMIT_LOGGING =BATCH
/

alter session set COMMIT_WAIT=NOWAIT
/

--alter session set PARALLEL_MIN_PERCENT=50
--/

insert /*+append*/ into ab_GTT_REF_SMC1 
SELECT
      /*+ FULL(P) use_nl(P) parallel(R,4) parallel(P,4) parallel(I,4) parallel(E,8) parallel(S,4) driving_site(P) */
      P.SMCP
    AS
      SMC_PROD_ID,
      SMC_SCR_KEY,
      SMC_MSD_KEY,
      P.SHORTDESCRIPTION
    AS
      PROD_SHRT_DESC,
      P.DESCRIPTION
    AS
      PROD_LNG_DESC,
      P.OPERATIONALINDICATOR
    AS
      OPER_IND,
      P.ISDUMMYPRODUCT
    AS
      IS_DUMMY_PROD,
      P.MARKETSECTORDESCRIPTION
    AS
      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1
    AS
      SCR_TYP_LVL_1,
      P.SECURITYTYPELEVEL2
    AS
      SCR_TYP_LVL_2,
      P.SERIES
    AS
      SERIES,
      (
        CASE
        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN
          CASE
          WHEN P.COUNTRY IS NULL THEN
            'UNALLOCATED'
          ELSE
            P.COUNTRY
          END
        ELSE
          I.ISSUERCOUNTRYOFRISK
        END )
    AS
      ISS_CTRY,
      P.ISSUECURRENCY
    AS
      ISS_CCY,
      E.INSTRUMENTLISTINGLEVEL
    AS
      INSM_LSTG_LVL,
      P.MARKET
    AS
      MKT,
      C.CONTRACTTYPE
    AS
      CON_TYP,
      P.MARKETSEGMENT
    AS
      MKT_SEG,
      piv.GMI
    AS
      GMI_TKR,
      TO_CHAR ( R.CURRENTMATURITYDATE, 'MM' ) AS
      MAT_MO,
      TO_CHAR ( R.CURRENTMATURITYDATE, 'YYYY' ) AS
      MAT_YR,
      piv.CSP
    AS
      CUSIP,
      piv.ISN
    AS
      ISIN,
      piv.RIC
    AS
      RIC,
      piv.SDL
    AS
      SEDOL,
      piv.CCD
    AS
      COM_CD,
      piv.BBPK
    AS
      BLMBRG_PK,
      piv.BUN
    AS
      BLMBRG_UNIQ_KEY,
      M.NASDTRACEFLAG
    AS
      NASD_TRCE_FLAG,
      P.ISINDEFAULT
    AS
      IS_IN_DFLT,
      USER
    AS
      CRTD_BY,
      systimestamp
    AS
      CRTD_TS,
      USER
    AS
      LST_UPDT_BY,
      systimestamp
    AS
      LST_UPDT_TS,
      SCR_CUSIP,
      piv.BCSP
    AS
      BLMBRG_CUSIP,
      (
        CASE
        WHEN I.ISSUERCOUNTRY IS NULL THEN
          CASE
          WHEN P.COUNTRY IS NULL THEN
            'UNALLOCATED'
          ELSE
            P.COUNTRY
          END
        ELSE
          I.ISSUERCOUNTRY
        END )
    AS
      ORIG_ISS_CTRY,
      'I'
    AS
      IND_KEY,
      I.SMCI
    AS
      SMC_ISSUER_ID,
      I.ISSUERCOUNTRYOFINCORPORATION
    AS
      ISSUER_CTRY_OF_INCORP,
      I.ISSUERNAME
    AS
      SMC_ISSUER_NAM,
      P.ISSUESTATUS
    AS
      PROD_ISSUE_STA,
      P.SECURITYTYPELEVEL3
    AS
      SCR_TYP_LVL_3,
      S.ISDTCGLOBALLOCK
    AS
      GLBL_LCK_IND,
      S.ISDTCCCHILL
    AS
      CHILLED_STATUS,
      -- Release 3.3 - Added for JIRA 155817-2673,155817-2519
      --START
      II.COUPONDIVIDENDRATE
    AS
      COUPON_DIV_RT,
      II.COUPONDIVIDENDTYPE
    AS
      COUPON_DIV_TYP,
      S.DAYSTOSETTLE
    AS
      DAYS_TO_SETL,
      P.ISSUEDATE
    AS
      ISS_DT,
      piv.BBT
    AS
      BLMBRG_TCKR,
      MSD_SMBOL,
      IRIC,
      'Automated'
    AS
      REC_SRC,
      -- Release 3.8
      S.ISWTFAST
    AS
      IS_WTFAST,
      S.IS3C7
    AS
      IS_3C7,
      S.ISCEDEL
    AS
      IS_CEDEL,
      S.ISPLEDGECHILL
    AS
      IS_PLEDGECHILL,
      S.ISSEGREGATIONCHILL
    AS
      IS_SEGREGATIONCHILL,
      S.ISFEDBOOKENTRY
    AS
      IS_FEDBOOKENTRY,
      S.ISDEPOSITCHILL
    AS
      IS_DEPOSITCHIL,
      S.ISDTCCDELETE
    AS
      Is_DTCCDelete,
      S.ISNSCC
    AS
      Is_NSCC,
      S.ISREORG
    AS
      Is_Reorg,
      S.ISSEG100
    AS
      IS_SEG100,
      S.ISCODFAST
    AS
      IS_CODFAST,
      S.ISCNSELIGIBLE
    AS
      IS_CNSELIGIBLE,
      S.ISWTCHILL
    AS
      IS_WTCHILL,
      S.ISINTERDEPOSITORYCHILL
    AS
      IS_INTERDEPOSITORYCHILL,
      S.PTMLEVYINDICATOR
    AS
      PTMLEVY_INDICATOR,
      S.ISDTCREGISTERED
    AS
      IS_DTCREGISTERED,
      S.ISDTC
    AS
      IS_DTC,
      S.ISDTCCINTERIMSTATUS
    AS
      IS_DTCCINTERIMSTATUS,
      S.ISCODCHILL
    AS
      IS_CODCHILL,
      S.ISCOMMUNICATION
    AS
      IS_COMMUNICATION,
      S.ISDOCHILL
    AS
      IS_DOCHILL,
      S.ISCUSTODYSERVICE
    AS
      IS_CUSTODYSERVICE,
      S.ISEUROCLEAR
    AS
      IS_EUROCLEAR,
      S.ISSALOMON
    AS
      IS_SALOMON,
      S.ISREORGDEPOSIT
    AS
      IS_REORGDEPOSIT,
      S.UKSTAMPDUTYMARKER
    AS
      UKSTAMPDUTY_MARKET,
      S.ISDTCFROZEN
    AS
      IS_DTCFROZEN,
      S.ISFEDFUND
    AS
      IS_FEDFUND,
      S.ISBOOKENTRY
    AS
      IS_BOOKENTRY,
      S.ISEDSELIGIBLE
    AS
      IS_EDSELIGIBLE,
      --END
      --Release4.1
      piv.GRIC
    AS
      GRIC,
      E.ISGLOBALPRIMARY
    AS
      IS_GLOBALPRIMARY FROM C160970SMC.PRODUCT@gmail.com P,
      -- Release 3.3 - Added for JIRA 155817-2519 added C160970SMC.INCOME_INFORMATION@gmail.com II
      C160970SMC.INCOME_INFORMATION@gmail.com II,
      C160970SMC.ISSUER@gmail.com I,
      C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E,
      C160970SMC.CONTRACT_INFORMATION@gmail.com C,
      C160970SMC.COMPLIANCE@gmail.com M,
      C160970SMC.REDEMPTION@gmail.com R,
      (SELECT
        /*+ PARALLEL (CX,4) */
        SMCP,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'FII'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SMC_SCR_KEY,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'MSDC'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SMC_MSD_KEY,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'SCSP'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SCR_CUSIP,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'IRIC'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS IRIC,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'SMBS'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS MSD_SMBOL
      FROM C160970SMC.DEPOT_XREF@gmail.com CX
      WHERE XREFCODE IN ( 'FII','MSDC','SCSP','IRIC','SMBS')
      GROUP BY SMCP
      ) CX,
      (SELECT
        /*+ PARALLEL (X,4) */
        X.SMCP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GMIT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GMI,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'ISN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS ISN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'RIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS RIC,
        MAX(
        CASE
          WHEN X.XREFCODE = 'SDL'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS SDL,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CCD'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CCD,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBPK'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBPK,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BUN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BUN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BCSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BCSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBT,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GRIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GRIC
      FROM C160970SMC.XREF@gmail.com X
      WHERE DFLAG   = 'N'
      AND XREFCODE IN ('BUN','BCSP','BBPK','CCD','SDL','RIC','ISN','CSP','GMIT','BBT','GRIC')
      GROUP BY X.SMCP
      ) piv,
      C160970SMC.SETTLEMENT@gmail.com S WHERE P.ISSUERSMCI = I.SMCI(+) AND P.SMCP = E.SMCP(+) AND P.SMCP = R.SMCP(+) AND P.SMCP = CX.SMCP(+) AND P.SMCP = C.SMCP(+) AND P.SMCP = M.SMCP(+) AND P.SMCP = piv.SMCP(+) AND P.SMCP = S.SMCP(+) AND P.SMCP=II.SMCP(+) AND P.SMCP IN
      (SELECT
        /*+ PARALLEL1(SLU, 4)*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com SLU
      WHERE DDAMODIFIEDTS > sysdate-1
      )
/

commit
/


set line 300

SELECT   dfo_number, tq_id, server_Type, MIN (num_rows),
               MAX (num_rows), COUNT ( * ) dop
        FROM   v$pq_tqstat
    GROUP BY   dfo_number, tq_id, server_Type
    ORDER BY   dfo_number, tq_id, server_type DESC
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_MR_II_C_E_P',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'PARTITION',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker>



--16 min
<worker1 name="SMC_XX_MIX">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table del_xx_mix
/

insert --+append
into del_xx_mix
SELECT --+parallel(4)
xx.*,mix.* from (select --+parallel(4)
ss.SMCP, v.* from (
select
nvl(cx.SMCP_CX,x.SMCP_x) smcp_xx, cx.*, x.* from
(SELECT
        /*+ PARALLEL(CX,4)  INDEX_FFS(CX, PK_DEPOT_XREF  )*/
        SMCP SMCP_CX,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'FII'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SMC_SCR_KEY,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'MSDC'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SMC_MSD_KEY,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'SCSP'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SCR_CUSIP,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'IRIC'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS IRIC,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'SMBS'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS MSD_SMBOL --,
		--substr(reverse(smcp),1,1) rev
      FROM C160970SMC.DEPOT_XREF@gmail.com
      CX
      WHERE XREFCODE IN ( 'FII','MSDC','SCSP','IRIC','SMBS')
	  and smcp in (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      )
      GROUP BY SMCP) cx
      full outer join
      (SELECT
        /*+ PARALLEL (X,4) INDEX_FFS(X, PK_XREF )*/
        X.SMCP SMCP_x,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GMIT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GMI,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'ISN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS ISN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'RIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS RIC,
        MAX(
        CASE
          WHEN X.XREFCODE = 'SDL'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS SDL,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CCD'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CCD,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBPK'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBPK,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BUN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BUN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BCSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BCSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBT,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GRIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GRIC --,
	--	substr(reverse(smcp),1,1) rev
      FROM C160970SMC.XREF@gmail.com  X
      WHERE DFLAG   = 'N'
      AND XREFCODE IN ('BUN','BCSP','BBPK','CCD','SDL','RIC','ISN','CSP','GMIT','BBT','GRIC')
	  and smcp in (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      )
      GROUP BY X.SMCP) X
      on (cx.smcp_cx=x.smcp_x)) v
      full outer join
      (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp,DDAMODIFIEDTS
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      --WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) ss
      on (v.smcp_xx=ss.smcp)
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM')
      xx
      full outer join
      (
  SELECT nvl(v.SMCP,E.SMCP) SMCP_mix, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
v.CONTRACTTYPE, E.INSTRUMENTLISTINGLEVEL, E.ISGLOBALPRIMARY
FROM (select
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE --, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev
from (select
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com
  R) R
  FULL OUTER JOIN
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP) ) v
 full outer join C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E
  on (v.SMCP=E.SMCP)
  ) mix
    on(xx.smcp_xx=mix.SMCP_mix)    
/
	
]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1> 
 
--15 min
<worker1 name="SMC_XX_MIX">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table del_xx_mix
/

insert --+append
into del_xx_mix
SELECT --+parallel(4)
xx.*,mix.* from (select --+parallel(4)
ss.SMCP, v.* from (
select
nvl(cx.SMCP_CX,x.SMCP_x) smcp_xx, cx.*, x.* from
(SELECT
        /*+ PARALLEL(CX,4)  INDEX_FFS(CX, PK_DEPOT_XREF  )*/
        SMCP SMCP_CX,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'FII'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SMC_SCR_KEY,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'MSDC'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SMC_MSD_KEY,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'SCSP'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS SCR_CUSIP,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'IRIC'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS IRIC,
        MAX(
        CASE
          WHEN CX.XREFCODE = 'SMBS'
          THEN CX.XREFVALUE
          ELSE NULL
        END) AS MSD_SMBOL --,
		--substr(reverse(smcp),1,1) rev
      FROM C160970SMC.DEPOT_XREF@gmail.com
      CX
      WHERE XREFCODE IN ( 'FII','MSDC','SCSP','IRIC','SMBS')
	  and smcp in (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      )
      GROUP BY SMCP) cx
      full outer join
      (SELECT
        /*+ PARALLEL (X,4) INDEX_FFS(X, PK_XREF )*/
        X.SMCP SMCP_x,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GMIT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GMI,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'ISN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS ISN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'RIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS RIC,
        MAX(
        CASE
          WHEN X.XREFCODE = 'SDL'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS SDL,
        MAX(
        CASE
          WHEN X.XREFCODE = 'CCD'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS CCD,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBPK'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBPK,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BUN'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BUN,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BCSP'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BCSP,
        MAX(
        CASE
          WHEN X.XREFCODE = 'BBT'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS BBT,
        MAX(
        CASE
          WHEN X.XREFCODE = 'GRIC'
          THEN X.XREFVALUE
          ELSE NULL
        END) AS GRIC --,
	--	substr(reverse(smcp),1,1) rev
      FROM C160970SMC.XREF@gmail.com  X
      WHERE DFLAG   = 'N'
      AND XREFCODE IN ('BUN','BCSP','BBPK','CCD','SDL','RIC','ISN','CSP','GMIT','BBT','GRIC')
	  and smcp in (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      )
      GROUP BY X.SMCP) X
      on (cx.smcp_cx=x.smcp_x)) v
      full outer join
      (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp,DDAMODIFIEDTS
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      --WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) ss
      on (v.smcp_xx=ss.smcp)
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM')
      xx
      full outer join
      (
SELECT --+parallel(4)
    SLU.SMCP SMCP_mix, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
    v.CONTRACTTYPE, v.INSTRUMENTLISTINGLEVEL, v.ISGLOBALPRIMARY --, substr(reverse(SLU.SMCP),1,1)
 FROM (
  SELECT nvl(v.SMCP,E.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
v.CONTRACTTYPE, E.INSTRUMENTLISTINGLEVEL, E.ISGLOBALPRIMARY
FROM (select
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE --, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev
from (select
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com
  R) R
  FULL OUTER JOIN
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP) ) v
 full outer join C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E
  on (v.SMCP=E.SMCP)) v
  full outer join
  (SELECT
        smcp,  DDAMODIFIEDTS
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      --WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) slu
      on (v.SMCP=SLU.SMCP)
	  where DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM') mix
    on(xx.smcp_xx=mix.SMCP_mix)
/
	
]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker1> 

</etldataflow>
