<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SMC_SPOOL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
  
	  <param name="FROM_DB" value="%DL_GMAU%"></param>
	  <param name="FROM_DB1" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="DLROGMARWSMART"></param>
	  <param name="DB_CONNECTOR1" value="%DL_GMAU%"></param>
	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
		
		
	  <param name="SOURCE_FILE" value="--replaced from command line"></param>	
	  <param name="COB_YEAR" value="--replaced from command line"></param>

</globals>


<worker name="one_forth_0">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table TMP_RIDS_idx
/

--ALTER SESSION ENABLE PARALLEL DML
--/

alter session set COMMIT_LOGGING =BATCH
/

alter session set COMMIT_WAIT=NOWAIT
/

--alter session set PARALLEL_MIN_PERCENT=50
--/

insert --+append
into TMP_RIDS_idx 
select --+parallel_(8)
nvl(t.SMC_PROD_ID,t1.SMC_PROD_ID) SMC_ISSUER_ID,nvl2(R.SMC_ISSUER_ID,nvl2(t1.SMC_PROD_ID,0,1),nvl2(t1.SMC_PROD_ID,0,2)) in_out,
nvl(rev,substr(reverse(t1.SMC_PROD_ID),1,1)) rev --,
--T.SMC_PROD_ID,t1.SMC_PROD_ID t1_SMC_PROD_ID,R.SMC_ISSUER_ID
FROM  (select rowid,T.SMC_ISSUER_ID,t.SMC_PROD_ID, rev from TMP_REF_SMC_REV T 
--where  ROWID BETWEEN 'AAPbxwAA1AAFdYAAAA' AND 'AAPbxwAA1AAHUp/APo'
) T ,STG_REF_SMC_ISSUER R ,TMP_REF_SMC1 t1 --del_p_inx t1
where T.SMC_ISSUER_ID=R.SMC_ISSUER_ID(+)
and t.SMC_PROD_ID =t1.SMC_PROD_ID(+)
/

commit
/


set line 300

SELECT   dfo_number, tq_id, server_Type, MIN (num_rows),
               MAX (num_rows), COUNT ( * ) dop
        FROM   v$pq_tqstat
    GROUP BY   dfo_number, tq_id, server_Type
    ORDER BY   dfo_number, tq_id, server_type DESC
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_MR_II_C_E_P',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'PARTITION',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>
</worker>



</etldataflow>
