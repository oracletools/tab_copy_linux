<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SMC_SPOOL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
  
	  <param name="FROM_DB" value="%DL_GMAU%"></param>
	  <param name="FROM_DB1" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="DLROGMARWSMART"></param>
	  <param name="DB_CONNECTOR1" value="%DL_GMAU%"></param>
	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
		
		
	  <param name="SOURCE_FILE" value="--replaced from command line"></param>	
	  <param name="COB_YEAR" value="--replaced from command line"></param>

</globals>


<worker name="SMC_PRODUCT">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_P_I
/
		
insert --+append
into SMC_P_I
select --+parallel(4)
slu.smcp, v.*
from(
  select --+ parallel(4) index_ffs_(P PK_PRODUCT  ) drivin_site(ss)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,  
      (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,      
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  P
full outer join
C160970SMC.ISSUER@gmail.com I
 on (P.ISSUERSMCI=I.SMCI) --where 1=2
) v
full outer join
  (SELECT
        smcp,  DDAMODIFIEDTS
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      --WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) slu
      on (v.SMC_PROD_ID=SLU.SMCP)
	  where DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE)
end;
/
*/


]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker>


<worker1 name="SMC_PRODUCT">

<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_PRODUCT
/
		
insert --+append
into SMC_PRODUCT
  select --+ parallel(4) index_ffs_(P PK_PRODUCT  ) drivin_site(ss)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  P
full outer join
  (SELECT
        smcp,  DDAMODIFIEDTS
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      --WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) slu
      on (P.SMCP=SLU.SMCP)
	  where DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE)
end;
/
*/


]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>

<worker1 name="SMC_PRODUCT">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_PRODUCT
/
		
insert --+append
into SMC_PRODUCT
  select --+ parallel(4) index_ffs_(P PK_PRODUCT  ) drivin_site(ss)
P.SMCP    AS      SMC_PROD_ID,
      --SMC_SCR_KEY,
      --SMC_MSD_KEY,
       P.SHORTDESCRIPTION    AS      PROD_SHRT_DESC,      P.DESCRIPTION    AS      PROD_LNG_DESC,      P.OPERATIONALINDICATOR    AS      OPER_IND,      P.ISDUMMYPRODUCT    AS      IS_DUMMY_PROD,      P.MARKETSECTORDESCRIPTION    AS      MKT_SECT_DESC,
      P.SECURITYTYPELEVEL1    AS      SCR_TYP_LVL_1,      P.SECURITYTYPELEVEL2    AS      SCR_TYP_LVL_2,      P.SERIES    AS      SERIES,
      -- (        CASE        WHEN I.ISSUERCOUNTRYOFRISK IS NULL THEN          CASE          WHEN P.COUNTRY IS NULL THEN            'UNALLOCATED'          ELSE            P.COUNTRY          END        ELSE          I.ISSUERCOUNTRYOFRISK        END )    AS      ISS_CTRY,
      P.ISSUECURRENCY    AS      ISS_CCY,
      --E.INSTRUMENTLISTINGLEVEL    AS      INSM_LSTG_LVL,
       P.MARKET    AS      MKT,
      --C.CONTRACTTYPE    AS      CON_TYP,
      P.MARKETSEGMENT    AS      MKT_SEG,
P.ISINDEFAULT    AS      IS_IN_DFLT
,substr(reverse(p.smcp),1,1) rev
from   C160970SMC.PRODUCT@gmail.com  P
/

/*
begin
 DBMS_STATS.GATHER_TABLE_STATS(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE)
end;
/
*/


]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker name="SMC_MR_II_C_E">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table smc_mr_ii_c_e_p_2
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into smc_mr_ii_c_e_p_2
SELECT --+parallel(4)
    SLU.SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
    v.CONTRACTTYPE, v.INSTRUMENTLISTINGLEVEL, v.ISGLOBALPRIMARY, substr(reverse(SLU.SMCP),1,1)
 FROM (
  SELECT nvl(v.SMCP,E.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
v.CONTRACTTYPE, E.INSTRUMENTLISTINGLEVEL, E.ISGLOBALPRIMARY
FROM (select
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE --, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev
from (select
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com
  R) R
  FULL OUTER JOIN
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       full outer join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP) ) v
 full outer join C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E
  on (v.SMCP=E.SMCP)) v
  full outer join
  (SELECT
        smcp,  DDAMODIFIEDTS
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      --WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) slu
      on (v.SMCP=SLU.SMCP)
	  where DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker>

--9 min
<worker1 name="SMC_MR_II_C_E">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II_C_E
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II_C_E
SELECT --+parallel(4)
    SLU.SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
    v.CONTRACTTYPE, v.INSTRUMENTLISTINGLEVEL, v.ISGLOBALPRIMARY
 FROM (
  SELECT nvl(v.SMCP,E.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
v.CONTRACTTYPE, E.INSTRUMENTLISTINGLEVEL, E.ISGLOBALPRIMARY
FROM (select
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev
from (select
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com
  R) R
  FULL OUTER JOIN
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       full outer join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP) ) v
 full outer join C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E
  on (v.SMCP=E.SMCP)) v
  full outer join
  (SELECT
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) slu
      on (v.SMCP=SLU.SMCP)
	  where SLU.SMCP is not null
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


--11.5
<worker1 name="SMC_MR_II_C_E">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II_C_E_P
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II_C_E_P
SELECT --+parallel(4)
    nvl(v.SMCP,SLU.SMCP), v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
    v.CONTRACTTYPE, v.INSTRUMENTLISTINGLEVEL, v.ISGLOBALPRIMARY, nvl2(SLU.SMCP,1,0) in_out
 FROM (
  SELECT nvl(v.SMCP,E.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
v.CONTRACTTYPE, E.INSTRUMENTLISTINGLEVEL, E.ISGLOBALPRIMARY
FROM (select
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev
from (select
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com
  R) R
  FULL OUTER JOIN
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       full outer join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP) ) v
 full outer join C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E
  on (v.SMCP=E.SMCP)) v
  full outer join
  (SELECT
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) slu
      on (v.SMCP=SLU.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


-9 min
<worker1 name="SMC_MR_II_C_E">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II_C_E
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II_C_E
SELECT nvl(v.SMCP,E.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
v.CONTRACTTYPE, E.INSTRUMENTLISTINGLEVEL, E.ISGLOBALPRIMARY
FROM (select --+parallel(4)
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev
from (select --+parallel(4)
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com
  R) R
  FULL OUTER JOIN
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       full outer join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP) ) v
 full outer join C160970SMC.EXCHANGE_LISTING_INFO@gmail.com E
  on (v.SMCP=E.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker1 name="SMC_MR_II_C_P">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II_C_P
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II_C_P
select --+parallel(4)
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE, substr(reverse(nvl(v.SMCP,C.SMCP)),1,1) rev 
from (select --+parallel(4) 
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select 
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com 
  R) R
  FULL OUTER JOIN  
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com 
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       full outer join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker1 name="SMC_MR_II_p">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II_C
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II_C
select --+parallel(4)
nvl(v.SMCP,C.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, v.COUPONDIVIDENDRATE,v.COUPONDIVIDENDTYPE,
C.CONTRACTTYPE 
from (select --+parallel(4) 
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  --substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select 
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com 
  R) R
  FULL OUTER JOIN  
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com 
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)) v
       full outer join
 C160970SMC.CONTRACT_INFORMATION@gmail.com C
 on (v.SMCP=C.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker1 name="SMC_MR_II_p">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II_p
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II_p
select --+parallel(4) 
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE,
  substr(reverse(nvl(v.SMCP,II.SMCP)),1,1) rev
  from (
  select 
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com 
  R) R
  FULL OUTER JOIN  
 (select M.SMCP, M.NASDTRACEFLAG from C160970SMC.COMPLIANCE@gmail.com 
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>


<worker1 name="SMC_MR_II">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR_II
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR_II
select --+parallel(4) 
  nvl(v.SMCP,II.SMCP) SMCP, v.CURRENTMATURITYDATE,v.NASDTRACEFLAG, II.COUPONDIVIDENDRATE,II.COUPONDIVIDENDTYPE
  from (
  select 
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com 
  R) R
  FULL OUTER JOIN  
 (select M.SMCP, M.NASDTRACEFLAG,substr(reverse(m.smcp),1,1) rev from C160970SMC.COMPLIANCE@gmail.com 
 M) M
      on (R.SMCP=M.SMCP) ) v
      full outer join
       C160970SMC.INCOME_INFORMATION@gmail.com II
       on (v.SMCP=II.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>

<worker1 name="SMC_3t">
  <exec_query_spool>
    <table_utils 	method="%QUERY_SPOOL_METHOD%" >
     	<param name="IF_COMPRESSED_SPOOL" value="0"></param>
		<param name="DB_CONNECTOR1" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="FROM_DB1" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME1" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[ 
select --+parallel(4)
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION --@gmail.com 
  R) R
  FULL OUTER JOIN  
 (select M.SMCP, M.NASDTRACEFLAG,substr(reverse(m.smcp),1,1) rev from C160970SMC.COMPLIANCE --@gmail.com 
 M) M
      on (R.SMCP=M.SMCP)	  ;
]]>
      </sql_template>
    </table_utils>
  </exec_query_spool>
</worker1>


<worker1 name="SMC_MR_FULL_OUTER">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR
  select --+parallel(4)
  NVL(R.SMCP,M.SMCP) SMCP, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(NVL(R.SMCP,M.SMCP)),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com 
  R) R
  FULL OUTER JOIN  
 (select M.SMCP, M.NASDTRACEFLAG,substr(reverse(m.smcp),1,1) rev from C160970SMC.COMPLIANCE@gmail.com 
 M) M
      on (R.SMCP=M.SMCP)
/

/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>



<worker1 name="SMC_REDEMPTION">
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
truncate table SMC_MR
/

]]>
      </sql_template>
    </table_utils>
  </exec_select>
<exec_select>
    <table_utils   method="%DML_METHOD%" >
		<param name="DB_CONNECTOR" value="%CSMARTREF_SMARTQ1%"></param>
		<param name="SCHEMA_NAME" value="CSMARTREF"></param>
      <sql_template>
        <![CDATA[
insert --+append
into SMC_MR
 select --+CACHE(ss) 
  ss.smcp, R.CURRENTMATURITYDATE,M.NASDTRACEFLAG,substr(reverse(ss.smcp),1,1) rev FROM
  (select R.smcp, R.CURRENTMATURITYDATE, substr(reverse(R.smcp),1,1) rev from C160970SMC.REDEMPTION@gmail.com R) R,  
 (select M.SMCP, M.NASDTRACEFLAG,substr(reverse(m.smcp),1,1) rev from C160970SMC.COMPLIANCE@gmail.com M) M,
 (SELECT
        /*+ PARALLEL(SLU, 4) INDEX_FFS(SLU,PK_SECURITY_LAST_UPDATE )*/
        smcp
      FROM C160970SMC.SECURITY_LAST_UPDATE@gmail.com  SLU
      WHERE DDAMODIFIEDTS > '07-AUG-12 03.19.13 AM'
      ) ss
      where R.SMCP(+)=ss.smcp and m.SMCP(+)=ss.smcp
/
/*
begin
 DBMS_STATS.SMC_MR(
ownname => user,
tabname => 'SMC_REDEMPTION',
method_opt => 'FOR COLUMNS SMCP',
granularity => 'ALL',
cascade => TRUE,
degree => DBMS_STATS.DEFAULT_DEGREE);
end;
/
*/
]]>
      </sql_template>
    </table_utils>
  </exec_select>

</worker1>



</etldataflow>
