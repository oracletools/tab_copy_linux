<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SPOOL_CNS_BUY_SELL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="SYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="'|'"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
  
	  <param name="FROM_DB" value="%CVOL_SMARTP1B%"></param>
	  <param name="DB_CONNECTOR" value="%CVOL_SMARTP1B%"></param>	
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
		
		
	  <param name="SOURCE_FILE" value="--replaced from command line"></param>	
	  <param name="COB_YEAR" value="11"></param>
</globals>


<worker name="CSMARTVOL.Q1.SPOOL">
  <exec_dml>
    <table_utils 	method="%DML_METHOD%" >
	

	
      <sql_template>
        <![CDATA[
create or replace view ZZ_%COB_YEAR%_%SOURCE_FILE%_%TIMESTAMP% as
SELECT  /*+PARALLEL(TRD_VOL_UNION,32)*/ to_char(cob_dt,'YYYY-MM') as Period,
        feed_src_sys,
        src_file_cd,
        metrics_cat,
        vol_evnt_typ,
        fo_book_sys,
        trd_vol_union.ASET_LVL_KEY ,
        man_ref_aset_lvl_data.ASET_LVL_0_DESC,
        man_ref_aset_lvl_data.ASET_LVL_1_DESC,
        man_ref_aset_lvl_data.ASET_LVL_2_DESC,-- Added 1st May 2012
        --MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID,
        MAN_REF_LGL_ENTY_DATA.LGL_ENTY_ID,
        trd_vol_union.LGL_ENTY_KEY,
        MAN_REF_LGL_ENTY_DATA.LGL_ENTY_NAM,
         MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN,
        trd_vol_union.fo_goc,
        ref_mngd_seg_hier.goc_rgn_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_2_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_5_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_6_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_7_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_8_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_9_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_10_descr, -- Added 1st May 2012
        mkt_setl.fin_insm_key,----Added 1st May 2012
        mkt_setl.ctry_desc,   --Already Present   Market of Settlement Country
        mkt_setl.rgn,         --Already Presnt   Market of Settlement Region
        trd_vol_union.buy_sell,
        trd_vol_union.trd_sta,
        mkt_setl.firm_agt,
        trd_vol_union.own_cd,
        trd_vol_union.bltr_cd,
        trd_vol_union.cob_dt,
         SUM(
          CASE
            WHEN UPPER(trd_sta) IN ('SETTLED')
            THEN                 1
            WHEN UPPER(trd_sta) IN ('CANCELLED AFTER SETTLEMENT')
            THEN                 -1
          ELSE 0
          END) AS BO_OS_TRD_CNT,
         SUM(
          CASE
            WHEN UPPER(trd_sta) IN ('SETTLED')
            THEN                 qty
            WHEN UPPER(trd_sta) IN ('CANCELLED AFTER SETTLEMENT')
            THEN                 -1 * qty
          ELSE 0
          END) AS BO_OS_TRD_QTY,
         SUM(
          CASE
            WHEN UPPER(trd_sta) IN ('SETTLED')
            THEN                 CALC_USD_AMT
            WHEN UPPER(trd_sta) IN ('CANCELLED AFTER SETTLEMENT')
            THEN                 -1 * CALC_USD_AMT
          ELSE 0
          END) AS BO_OS_TRD_VAL
FROM    (select * from  csmartvol.TRD_VOL_UNION PARTITION(JAN_%COB_YEAR%1)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        --and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN  ('%SRC_FILE_CD%') 
		and rownum<10000
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(JAN_%COB_YEAR%2)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(FEB_%COB_YEAR%1)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(FEB_%COB_YEAR%2)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(MAR_%COB_YEAR%1)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(MAR_%COB_YEAR%2)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(APR_%COB_YEAR%1)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(APR_%COB_YEAR%2)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(MAY_%COB_YEAR%1)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(MAY_%COB_YEAR%2)  where --rownum<100000000 and
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(JUN_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(JUN_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(JUL_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(JUL_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(AUG_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(AUG_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(SEP_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(SEP_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(OCT_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(OCT_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(NOV_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(NOV_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
       UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(DEC_%COB_YEAR%1)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%')
        UNION ALL
        select * from  csmartvol.TRD_VOL_UNION PARTITION(DEC_%COB_YEAR%2)  where
         trd_vol_union.metrics_cat = 'Volumes'
        and trd_vol_union.vol_evnt_typ = 'Settlement Volume'
        AND trd_vol_union.src_file_cd IN ('%SRC_FILE_CD%') 
        ) TRD_VOL_UNION,
        csmartref.REF_MNGD_SEG_HIER,
        csmartref.MAN_REF_LGL_ENTY_XREF,
        csmartref.MAN_REF_LGL_ENTY_DATA,
        CSMARTREF.man_ref_aset_lvl_data,
        csmartref.man_ref_mkt_of_setl mkt_setl
WHERE   trd_vol_union.FO_GOC = REF_MNGD_SEG_HIER.GOC(+)
        AND trd_vol_union.LGL_ENTY_KEY = MAN_REF_LGL_ENTY_XREF.LGL_ENTY_KEY(+)
        AND MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID =MAN_REF_LGL_ENTY_DATA.LGL_ENTY_ID(+)
        AND trd_vol_union.ASET_LVL_KEY = man_ref_aset_lvl_data.ASET_LVL_KEY(+)
        and trd_vol_union.actl_mkt_of_setl_cd = mkt_setl.fin_insm_key (+)
group by to_char(cob_dt,'YYYY-MM') ,
        feed_src_sys,
        src_file_cd,
        metrics_cat,
        vol_evnt_typ,
        fo_book_sys,
        trd_vol_union.ASET_LVL_KEY ,
        man_ref_aset_lvl_data.ASET_LVL_0_DESC,
        man_ref_aset_lvl_data.ASET_LVL_1_DESC,
        trd_vol_union.LGL_ENTY_KEY,
        --MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID,
        MAN_REF_LGL_ENTY_DATA.LGL_ENTY_ID,
        MAN_REF_LGL_ENTY_DATA.LGL_ENTY_NAM,
        MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN,
        mkt_setl.ctry_desc,
        mkt_setl.rgn,
        trd_vol_union.fo_goc,
        ref_mngd_seg_hier.goc_rgn_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_2_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_5_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_6_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_7_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_8_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_9_descr,
        ref_mngd_seg_hier.mngd_seg_lvl_10_descr,
        mkt_setl.fin_insm_key,
        man_ref_aset_lvl_data.ASET_LVL_2_DESC,
        trd_vol_union.buy_sell,
        trd_vol_union.trd_sta,
        mkt_setl.firm_agt,
        trd_vol_union.own_cd,
        trd_vol_union.bltr_cd,
        trd_vol_union.cob_dt;
		
]]>
      </sql_template>
    </table_utils>
  </exec_dml>
  <exec_spool>
    <table_utils 	method="%SPOOL_METHOD%" >
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
CSMARTVOL.ZZ_%COB_YEAR%_%SOURCE_FILE%_%TIMESTAMP%
]]>
      </sql_template>
    </table_utils>
  </exec_spool>
  <exec_dml>
    <table_utils 	method="%DML_METHOD%" >
	<param name="DB_CONNECTOR" value="%CVOL_SMARTD1%"></param>	
      <sql_template>
        <![CDATA[
drop view ZZ_%COB_YEAR%_%SOURCE_FILE%_%TIMESTAMP%;
		
]]>
      </sql_template>
    </table_utils>
  </exec_dml>  
</worker>



</etldataflow>
