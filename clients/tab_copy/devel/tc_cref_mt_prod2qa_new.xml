<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="CREF_MT_PROD2QA_TEST">
<globals>

	<!-- PIPELINE execution type
	SYNC - synchronous, ANYNC - asynchronous 
	-->
	<param name="FLOW_TYPE" value="ASYNC"></param>	
	
      <param name="FIELD_TERMINATOR" value='|'></param> 
      <param name="LINE_TERMINATOR" value="~"></param> 
      <param name="FROM_DB1" value="%CSMARTREF_SMARTU1B%"></param>
      <param name="TO_DB" value="%CSMARTREF_SMARTQ1%"></param>
      <param name="TO_SCHEMA" value="CSMARTREF"></param>
      
      <param name="ARRAYSIZE" value="5000"></param>
      <param name="COPYCOMMIT" value="4"></param>

	  <param name="LAME_DUCK" value='0'></param>
       <param name="IF_TRUNCATE" value='1'></param>
	   
	  		--use these 2 to ensure index maintenance in DIRECT non-parallel mode load mode
			<param name="SKIP_INDEX_MAINTENANCE" value="TRUE"></param>
			
			<param name="IF_DPL_SERIAL" value="1"></param>
			<param name="DPL_BINDSIZE" value="100000"></param>
			--use this to REBUILD unusable indexes.
			<param name="IF_REBUILD_UNUSABLE_INDEXES" value="1"></param>	
</globals>

<worker name="CSMARTREF.REF_SMC">
  <exec_copy>
    <sqlp   method="%COPY_METHOD%" >
     <param name="NUM_OF_SHARDS" value="4"></param>
     <param name="IF_DPL_SERIAL" value="0"></param>

      <sql_template>
        <![CDATA[
CSMARTREF.REF_SMC
]]>
      </sql_template>
    </sqlp>
  </exec_copy>

</worker>

<worker name="CSMARTREF.MAN_REF_OPS_OWN_HIER">
  <exec_copy>
    <sqlp   method="%COPY_METHOD%" >
      <sql_template>
        <![CDATA[
CSMARTREF.MAN_REF_OPS_OWN_HIER
]]>
      </sql_template>
    </sqlp>
  </exec_copy>
</worker>

<worker name="CSMARTREF.REF_MNGD_SEG_HIER">
  <exec_copy>
    <sqlp   method="%COPY_METHOD%" >
      <sql_template>
        <![CDATA[
CSMARTREF.REF_MNGD_SEG_HIER
]]>
      </sql_template>
    </sqlp>
  </exec_copy>
</worker>

<worker name="REF_FX">
  <exec_dml>
    <sqlp   method="%COPY_METHOD%" >
      <sql_template>
        <![CDATA[
CSMARTREF.REF_FX
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker name="REF_MTM">
  <exec_dml>
    <sqlp   method="%COPY_METHOD%" >
     <param name="NUM_OF_SHARDS" value="3"></param>
     <param name="IF_DPL_SERIAL" value="0"></param>

      <sql_template>
        <![CDATA[
CSMARTREF.REF_MTM
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker name="REF_SECURE">
  <exec_dml>
    <sqlp   method="%COPY_METHOD%" >
     <param name="NUM_OF_SHARDS1" value="2"></param>
     <param name="IF_DPL_SERIAL1" value="0"></param>


     <sql_template>
        <![CDATA[
CSMARTREF.REF_SECURE
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker1 name="REF_MNGD_SEG_HIER">
  <exec_dml>
    <sqlp   method="%COPY_METHOD%" >
      <sql_template>
        <![CDATA[
CSMARTREF.REF_MNGD_SEG_HIER
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker1>

<worker name="REF_MNGD_SEG_XREF">
  <exec_dml>
    <sqlp   method="%COPY_METHOD%" >
      <sql_template>
        <![CDATA[
CSMARTREF.REF_MNGD_SEG_XREF
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker name="REF_ESALES">
  <exec_dml>
    <sqlp   method="%COPY_METHOD%"  >
      <param name="FIELD_TERMINATOR" value=' |'></param>
      <param name="LINE_TERMINATOR" value="~"></param>
      <sql_template>
        <![CDATA[
CSMARTREF.REF_ESALES
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>


</etldataflow>

