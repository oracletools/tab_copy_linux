<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="RFS_METRIC_REF">
<globals> 
 
	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="#|"></param>
	  <param name="LINE_TERMINATOR" value="~"></param>
	  
  
	  <param name="FROM_DB" value="%LG_GMAP2%"></param>
	  <param name="FROM_SCHEMA" value="C164758RAP"></param>
	  
	  <param name="TO_DB" value="%C164758RAP_GMAU2%"></param>
	  <param name="TO_SCHEMA" value="C164758RAP"></param>	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
	  <param name="IF_TRUNCATE" value="1"></param>
	  
	  <param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
</globals>


<worker name="Q">
  <exec_query_copy>
    <table_utils 	method="%QUERY_COPY_METHOD%" >
	<param name="TO_TABLE" value="RFS_METRIC_REF"></param>	
	<param name="IF_CREATE_TARGET_TABLE" value="0"></param>		 
      <sql_template>
        <![CDATA[select t.rfs_id, t.hier_id, t.volcker_desk, t.panel_id, t.panel_1_subpanel_id, t.metric_name, t.unit_of_measurement, t.change_in_risk_factor, t.change_in_risk_factor_unit, t.rfs_effective_date, t.is_active, t.is_rentd_req, t.is_critical, t.submitted_by, t.not_null_checks, t.val_checks, t.hier_id_checks, t.crtd_by, t.crtd_dt, t.rfs_end_date, t.panel_2_subpanel_id, t.lst_upd_by, t.lst_upd_dt, t.risk_typ, t.lmt_typ, 'GMR_RFS' from C164758RAP.RFS_METRIC_REF t]]>
      </sql_template>
    </table_utils>
  </exec_query_copy>
  
</worker>
</etldataflow>
