<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="CLONE_FRH">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="SYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="'|'"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
	  <param name="FROM_DB" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="CSMARTBSER"></param>
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
	  
	<param name="PDEGREE" value="6"></param> 
	<param name="IF_DEBUG" value="1"></param> 

	<param name="IF_ASYNC_LOG" value="0"></param>
	
	
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
	<param name="IF_CLONE_UNCOMPRESSED" value="0"></param>
</globals>



--Elapsed:  1m55.662s

<worker name="T_CLONE">
--spool ddl and execute it in target db
  <exec_clone_table>
    <table_utils 	method="%CLONE_TABLE%" >
	<param 	name="TABLE_DLL_SPOOL_COLUMNS" value="OWNER, 'TABLE' OBJECT_TYPE,table_name OBJECT_NAME"></param>
	 --source db
	 <param name="FROM_DB" value="%CSMARTBSER_SMARTQ1%"></param>
	 <param name="FROM_SCHEMA" value="CSMARTBSER"></param>
	 --target db
	 <param name="TO_DB" value="%CSMARTBSER_SMARTQ1%"></param>
	 <param name="TO_SCHEMA" value="CSMARTBSER"></param>
	 
	 --table names
	 <param name="FROM_TABLE" value="FAILS_REPORTS_HISTORY"></param> 
	 <param name="TO_TABLE" value="CLONE_FAILS_REPORTS_HISTORY_1"></param>
	 
	 <sql_template>
        <![CDATA[
CSMARTBSER.%FROM_TABLE%
]]>
     </sql_template>
    </table_utils>
  </exec_clone_table>
</worker>






</etldataflow>