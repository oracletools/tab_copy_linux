<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="EXEC_CLONE_TEST">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="SYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="~"></param>
	  
	  
	  <param name="DB_CONNECTOR" value="%CSMARTBSER_SMARTU1B%"></param>
	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
	  
	<param name="PDEGREE" value="6"></param> 
	<param name="IF_DEBUG" value="1"></param> 

	<param name="IF_ASYNC_LOG" value="0"></param>
	<param name="FROM_TABLE" value="NOSTROS_SUMMARY"></param> -sp
	<param name="TO_TABLE" value="CLONE_NOSTROS_SUMMARY"></param>
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
	<param name="IF_CLONE_UNCOMPRESSED" value="1"></param>
</globals>

<worker name="T_CLONE">
--spool
  <exec_clone_table>
    <table 	method="%CLONE_TABLE%" >
	<param 	name="TABLE_DLL_SPOOL_COLUMNS" value="OWNER, 'TABLE' OBJECT_TYPE,table_name OBJECT_NAME"></param>
	 <param name="FROM_DB" value="%CSMARTBSER_SMARTU1B%"></param>
 	 <param name="FROM_SCHEMA" value="CSMARTBSER"></param>

	 <param name="TO_DB" value="%CSMARTBSER_SMARTD1%"></param>
	 <param name="TO_SCHEMA" value="CSMARTREF"></param>

	 
	 <sql_template>
        <![CDATA[
CSMARTBSER.NOSTROS_SUMMARY
]]>
      </sql_template>
    </table>
  </exec_clone_table>
</worker>

--validate create
  <exec_dml>
    <sqlp 	method="%DML_METHOD%" >
      <sql_template>
        <![CDATA[
SELECT '%FROM_TABLE%' from_table, '%TO_TABLE%' to_table, 'PARTITIONS' type, count(*) cnt FROM  all_tab_partitions where table_name= '%TO_TABLE%' and TABLE_OWNER='%SCHEMA_NAME%'
UNION ALL
SELECT '%FROM_TABLE%' from_table, '%TO_TABLE%' to_table, 'SUB-PARTITIONS' type, count(*) cnt FROM  all_tab_subpartitions where table_name= '%TO_TABLE%' and TABLE_OWNER='%SCHEMA_NAME%';
]]>
      </sql_template>
    </sqlp>
  </exec_dml>  
  
</etldataflow>