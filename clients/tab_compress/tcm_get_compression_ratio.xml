<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="GET_COMPRESSION_RATIO" >

<globals>
	<param name="ETLFLOW_DESCR" value="Gets compression ration of heap table"></param>

	<!-- PIPELINE execution type
	SYNC - synchronous, ANYNC - asynchronous 
	-->
	<param name="FLOW_TYPE" value="SYNC"></param>	  


	  <param name="FIELD_TERMINATOR" value="'|'"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
	  <param name="DB_CONNECTOR" value="%CSMARTBSER_SMARTU1B%"></param>
	  <param name="SCHEMA_NAME" value="CSMARTBSER"></param>
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->


	  
	  <param name="IF_ASYNC_LOG" value="1"></param>	
	  
	  <param name="FROM_TABLE" value="NOSTROS_HISTORY"></param>
	  <param name="TO_TABLE" value="AB_HEAP_TEST_W_INDEX2"></param>

</globals>


<worker name="CREATE_TABLE">
  <exec_dml>
    <sqlp method="%SELECT_METHOD%" >
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
      <sql_template>
        <![CDATA[
drop table %TO_TABLE%
/

CREATE TABLE %TO_TABLE% 
AS SELECT * FROM %FROM_TABLE% WHERE rownum<10000
/

--drop index IND_TEST
--/

create index IND_TEST on %TO_TABLE%(debit_credit)
/

]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker name="TAB_STATUS_BEFORE">
  <exec_dml>
    <sqlp method="%SELECT_METHOD%" >
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
      <sql_template>
        <![CDATA[
select   table_name, compression ,  compress_for, status
from user_tables c
where  table_name = '%TO_TABLE%'
/
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker name="INDEX_STATUS_BEFORE">
  <exec_dml>
    <sqlp method="%SELECT_METHOD%" >
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
      <sql_template>
        <![CDATA[
select index_name, index_type, compression, partitioned local,
status
from all_indexes
where index_name in (select index_name
from user_indexes
where table_name = '%TO_TABLE%'
)
/
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>



<worker name="AB_COMPRESS_HEAP_TAB_W_INDEX">
  <exec_dml>
    <sqlp method="%SELECT_METHOD%" >
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
      <sql_template>
        <![CDATA[
BEGIN AB_COMPRESS_TABLE.compress_heap_table(
						p_table_name 	=> '%TO_TABLE%',
						p_table_owner 	=> 'CSMARTBSER'
											); 
END;
/
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>


<worker name="INDEX_STATUS_AFTER">
  <exec_dml>
    <sqlp method="%SELECT_METHOD%" >
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
      <sql_template>
        <![CDATA[
select index_name, index_type, compression, partitioned local,
status
from all_indexes
where index_name in (select index_name
from user_indexes
where table_name = '%TO_TABLE%'
)
/
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

<worker name="TAB_STATUS_AFTER">
  <exec_dml>
    <sqlp method="%SELECT_METHOD%" >
	<param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
      <sql_template>
        <![CDATA[
select   table_name, compression ,  compress_for, status
from user_tables c
where  table_name = '%TO_TABLE%'
/
]]>
      </sql_template>
    </sqlp>
  </exec_dml>
</worker>

</etldataflow>
