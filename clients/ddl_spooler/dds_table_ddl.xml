<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="DDL_SPOOL">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="'|'"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
	  <param name="FROM_DB" value="%CSMARTBSER_SMARTU1B%"></param>
  
	  <param name="DB_CONNECTOR" value="%CSMARTBSER_SMARTU1B%"></param>
	  <param name="SCHEMA_NAME" value="CSMARTBSER"></param>
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
	  
	  <param name="PDEGREE" value="6"></param> 
	  <param name="IF_DEBUG" value="1"></param> 
	  
	  <param name="IF_ASYNC_LOG" value="1"></param>
	   <param name="FROM_TABLE" value="DEPOTS_SUMMARY"></param> -heap
	   <param name="FROM_TABLE1" value="NOSTROS_SUMMARY"></param> -sp
	   <param name="FROM_TABLE" value="NOSTROS_HISTORY"></param> -sp
	   <param name="FROM_TABLE1" value="FAILS_REPORTS_HISTORY"></param> -sp
	   <param name="TO_TABLE" value="DEL_TABLE2"></param>
	   
	   <param name="TO_TABLE" value="DEL_TABLE2"></param>
	   
	   
	   

</globals>

<worker name="T_DDL_REDEFINE">
--spool
  <exec_spool_ddl>
    <sqlp 	method="%DDL_SPOOL_METHOD%" >
	<param 	name="TABLE_DLL_SPOOL_COLUMNS" value="OWNER, 'TABLE' OBJECT_TYPE,table_name OBJECT_NAME"></param>
	 <param name="SPOOL_SCHEMA" value="CSMARTBSER"></param>
      <sql_template>
        <![CDATA[
SELECT %TABLE_DLL_SPOOL_COLUMNS% from all_tables where  owner='%SPOOL_SCHEMA%' 
and table_name in (
'%FROM_TABLE%'
) ;
]]>
      </sql_template>
    </sqlp>
  </exec_spool_ddl>
--clean-up  
  <exec_dml>
    <sqlp 	method="%DML_METHOD%" >

      <sql_template>
        <![CDATA[
DROP TABLE %TO_TABLE%
/

]]>
      </sql_template>
    </sqlp>
  </exec_dml>
  
--publish  
  <publisher >
   <sqlp 	method="%PUBLISH_DDL%" >
	  <param name="DB_CONNECTOR" value="%CSMARTBSER_SMARTU1B%"></param>
	  <param name="SCHEMA_NAME" value="CSMARTBSER"></param>   
      <sql_template><![CDATA[]]></sql_template>   
   </sqlp>
  </publisher>  
  
  --populate
   <exec_dml>
   <sqlp 	method="%DML_METHOD%" >
      <sql_template>
        <![CDATA[
INSERT /*+APPEND*/ INTO %TO_TABLE% SELECT * FROM  %FROM_TABLE% WHERE rownum<10000;
COMMIT;

]]>
      </sql_template>
    </sqlp>
  </exec_dml> 
  
--validate insert
  <exec_dml>
    <sqlp 	method="%DML_METHOD%" >
      <sql_template>
        <![CDATA[
SELECT count(*) FROM  %TO_TABLE%;
]]>
      </sql_template>
    </sqlp>
  </exec_dml>  

--validate create
  <exec_dml>
    <sqlp 	method="%DML_METHOD%" >
      <sql_template>
        <![CDATA[
SELECT 'PARTITIONS' type, count(*) cnt FROM  all_tab_partitions where table_name= '%TO_TABLE%' and TABLE_OWNER='%SCHEMA_NAME%'
UNION ALL
SELECT 'SUB-PARTITIONS' type, count(*) cnt FROM  all_tab_subpartitions where table_name= '%TO_TABLE%' and TABLE_OWNER='%SCHEMA_NAME%';
]]>
      </sql_template>
    </sqlp>
  </exec_dml>  
</worker>


<worker1 name="T_DDL_SPOOL_INDEXES">
--spool indexes
  <exec_spool_ddl>
    <sqlp 	method="%DDL_SPOOL_METHOD%" >
	<param 	name="TABLE_DLL_SPOOL_COLUMNS" value="OWNER, 'TABLE' OBJECT_TYPE,table_name OBJECT_NAME"></param>
	 <param name="SPOOL_SCHEMA" value="CSMARTBSER"></param>
      <sql_template>
        <![CDATA[
SELECT distinct OWNER, 'INDEX' OBJECT_TYPE, index_name OBJECT_NAME from all_indexes 
where   owner='%SPOOL_SCHEMA%'  and  table_name = '%FROM_TABLE%' and rownum<2;

]]>
      </sql_template>
    </sqlp>
  </exec_spool_ddl>
--publish indexes
  <publisher >
   <sqlp 	method="%PUBLISH_DDL%" >
	  <param name="DB_CONNECTOR" value="%CSMARTBSER_SMARTU1B%"></param>
	  <param name="SCHEMA_NAME" value="CSMARTBSER"></param>   
	   
      <sql_template><![CDATA[]]></sql_template>   
   </sqlp>
  </publisher>    
</worker1>

<worker1 name="T_DDL_SPOOL">
  <exec_spool_ddl>
    <sqlp 	method="%DDL_SPOOL_METHOD%" >
	<param 	name="DLL_SPOOL_COLUMNS" 
			value="OWNER,DECODE(OBJECT_TYPE,'PACKAGE', 'PACKAGE_SPEC','PACKAGE BODY','PACKAGE_BODY', OBJECT_TYPE) OBJECT_TYPE,OBJECT_NAME"
	 ></param>
	<param name="SPOOL_SCHEMA" value="CSMARTBSER"></param>
      <sql_template>
        <![CDATA[
SELECT %DLL_SPOOL_COLUMNS% from all_objects  where  owner='%SPOOL_SCHEMA%' 
and object_name in (
'P_FAILS_ATLAS_PAIROFF_IND_UPD',
'P_DEL_FAILS_REPORTS',
'P_FAILS_ADD_SUB_PARTITION',
'FAILS_WOW_RESOLVD_IND_UPDATE',
'FAILS_UNIN_TO_TLM_PKG',
'FAILS_UNIN_TO_TLM_PKG'
) ;
]]>
      </sql_template>
    </sqlp>
  </exec_spool_ddl>
  <publisher >
   <nzsql 	method="%PUBLISH_DDL%" >
	   <param name="DB_CONNECTOR" value="%NZ_MAP%"></param>
	   <param name="SCHEMA_NAME" value="MAP"></param>
   </nzsql>
  </publisher>
</worker1>

  <transformer1>
   <utils 	method="%CONVERT_DDL%" >
	   <param name="REGEXP" value="MAP"></param>
   </utils>
  </transformer1>  


</etldataflow>