<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="SELECT_TEST">
<globals>

	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="'|'"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
	  <param name="DB_CONNECTOR" value="%AB_SMARTP1B%"></param>
	  <param name="SCHEMA_NAME" value="AB95022"></param>
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
	  
	  <param name="PDEGREE" value="6"></param> 

</globals>



<worker name="TEST_DQ_ASET_1.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-01-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker>


<worker1 name="TEST_DQ_ASET_1.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-01-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>



<worker1 name="TEST_DQ_ASET_2.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-02-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_2.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-02-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_3.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-03-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_3.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-03-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>



<worker1 name="TEST_DQ_ASET_4.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-04-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_4.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-04-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_5.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-05-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_5.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-05-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_6.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-06-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_6.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-06-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_7.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-07-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_7.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-07-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_8.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-08-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_8.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-08-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>


<worker1 name="TEST_DQ_ASET_9.1">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-09-01 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>

<worker1 name="TEST_DQ_ASET_9.2">
  <exec_select>
    <sqlp 	method="%SELECT_METHOD%" >
	<param name="PART_DATE" value="2011-09-16 00:00:00"></param>
	<param name="IF_COMPRESSED_SPOOL" value="0"></param>	
      <sql_template>
        <![CDATA[
   SELECT 'VOLUMES'     AS DQCHK_GEN_VAL1,
            'ASSET_CLASS'     AS DQCHK_GEN_VAL2,
            DECODE(n,0,'ASSET_LEVEL_0',1,'ASSET_LEVEL_1',2,'ASSET_LEVEL_KEY')   AS DQCHK_GEN_VAL3,
            PRODUCT           AS DQCHK_GEN_VAL4,
            FEED_SRC_SYS      AS DQCHK_GEN_VAL5,
            DECODE(n,0,SUM(AL0_FAIL_CNT),1,SUM(AL1_FAIL_CNT),2,SUM(ALK_FAIL_CNT)) AS DRLDWN_CPK1,
            SUM(TOTAL_CNT)    AS DRLDWN_CPK2,
            SRC_FILE_CD       AS DRLDWN_CPK3,
            COB_DT            AS DRLDWN_CPK4,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT)      AS DRLDWN_CPK5,
            DECODE(n,2,CUSIP ,null)  AS DRLDWN_CPK6,
            DECODE(n,2,ISIN ,null)   AS DRLDWN_CPK7,
            DECODE(n,2,SEDOL ,null)  AS DRLDWN_CPK8,
            DECODE(n,2,ASET_LVL_ONE_DESC ,null) AS DRLDWN_CPK9
        FROM (SELECT REC_CNT AS TOTAL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN REC_CNT
            ELSE 0
        END AS ALK_FAIL_CNT,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL0_FAIL_CNT,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN REC_CNT
            ELSE 0
        END AS AL1_FAIL_CNT,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND = 1
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS ALK_FAIL_VAL,
        CASE
            WHEN (AL0DESC_FAIL_IND    = 1
             OR ASET_LVL_0_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL0_FAIL_VAL,
        CASE
            WHEN (AL1DESC_FAIL_IND    = 1
             OR ASET_LVL_1_DESC      IS NULL)
            AND ASET_LVL_KEY_FAIL_IND = 0
            THEN ASET_LVL_KEY_FAIL_VAL
        END AS AL1_FAIL_VAL,
        FEED_SRC_SYS,
        SRC_FILE_CD,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN COB_DT
        END AS COB_DT,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN CUSIP
        END AS CUSIP,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ISIN
        END AS ISIN,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN SEDOL
        END AS SEDOL,
        CASE
            WHEN (ASET_LVL_KEY_FAIL_IND = 1)
            THEN ASET_LVL_ONE_DESC
        END AS ASET_LVL_ONE_DESC,
        PRODUCT
    FROM (SELECT
        /*+ PARALLEL %PDEGREE% */
        COUNT(*) REC_CNT,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT,
        ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
            THEN ASET_LVL_ONE_DESC
        END ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN CUSIP
        END CUSIP,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN EXPN_CD
        END EXPN_CD,
        FEED_SRC_SYS,
        CASE
            WHEN FO_GOC_FAIL_IND=1
            THEN FIRM_ACCT_NO
        END FIRM_ACCT_NO,
        FO_GOC,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN ISIN
        END ISIN,
        --TRD_VOL_UNION.ITEM_CNT,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_ID_PP
        END LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        CASE
            WHEN TRIM(LGL_ENTY_KEY)              = ''
             OR upper(LGL_ENTY_KEY)              ='UNALLOCATED'
             OR LGL_ENTY_KEY                    IS NULL
             OR upper(LGL_ENTY_KEY)              ='NULL'
             OR SUBSTR(trim(LGL_ENTY_KEY ), -1,1)='_'
             OR instr(LGL_ENTY_KEY,'_NULL')     <>0
            THEN LGL_ENTY_NAM_PP
        END LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        CASE
            WHEN ASET_LVL_KEY_FAIL_IND=1
             OR MOS_FAIL_IND          =1
            THEN SEDOL
        END SEDOL,
        SRC_FILE_CD,
        TRAN_TYP
        --        count(*) over (partition by SRC_FILE_CD)
    FROM
        (SELECT
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR upper(FO_GOC) ='NULL'
                 OR upper(FO_GOC) ='UNALLOCATED'
                 OR FO_GOC       IS NULL
                THEN 1
                ELSE 0
            END FO_GOC_FAIL_IND,
            CASE
                WHEN TRIM(FO_GOC) =''
                 OR FO_GOC       IS NULL
                 OR upper(FO_GOC) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(FO_GOC)='UNALLOCATED'
                        THEN 'UNALLOCATED'
                        ELSE FO_GOC
                    END
            END FO_GOC_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(ACTL_MKT_OF_SETL_CD)                      =''
                 OR ACTL_MKT_OF_SETL_CD                            IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(ACTL_MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END ACTL_MOS_FAIL_IND,
            CASE
                WHEN TRIM(ACTL_MKT_OF_SETL_CD) =''
                 OR ACTL_MKT_OF_SETL_CD       IS NULL
                 OR upper(ACTL_MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(ACTL_MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(ACTL_MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(ACTL_MKT_OF_SETL_CD)
                        ELSE ACTL_MKT_OF_SETL_CD
                    END
            END ACTL_MOS_FAIL_VAL,
            CASE
                WHEN
                    --upper(trim(FEED_SRC_SYS) )                    <>'FLEXCUBELOANS' AND
                    (TRIM(MKT_OF_SETL_CD)                      =''
                 OR MKT_OF_SETL_CD                            IS NULL
                 OR upper(MKT_OF_SETL_CD)                      ='UNALLOCATED'
                 OR upper(MKT_OF_SETL_CD)                      ='NULL'
                 OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0)
                THEN 1
                ELSE 0
            END MOS_FAIL_IND,
            CASE
                WHEN TRIM(MKT_OF_SETL_CD) =''
                 OR MKT_OF_SETL_CD       IS NULL
                 OR upper(MKT_OF_SETL_CD) ='NULL'
                THEN 'NULL'
                ELSE
                    CASE
                        WHEN upper(MKT_OF_SETL_CD)                     ='UNALLOCATED'
                         OR instr(upper(MKT_OF_SETL_CD),'UNALLOCATED')<>0
                        THEN upper(MKT_OF_SETL_CD)
                        ELSE MKT_OF_SETL_CD
                    END
            END MOS_FAIL_VAL,
            CASE
                WHEN trim(ASET_LVL_KEY)               =''
                 OR upper(ASET_LVL_KEY)               ='UNALLOCATED'
                 OR ASET_LVL_KEY                     IS NULL
                 OR upper(ASET_LVL_KEY)               ='NULL'
                 OR instr(ASET_LVL_KEY,'___')        <>0
                 OR instr(ASET_LVL_KEY,'UNALLOCATED')<>0
                THEN 1
                ELSE 0
            END AS ASET_LVL_KEY_FAIL_IND,
            CASE
                WHEN TRIM(ASET_LVL_KEY) =''
                 OR ASET_LVL_KEY       IS NULL
                 OR upper(ASET_LVL_KEY) ='NULL'
                THEN 'NULL'
                ELSE ASET_LVL_KEY
            END AS ASET_LVL_KEY_FAIL_VAL,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR upper(CTP_UID_GRD) ='NULL'
                 OR upper(CTP_UID_GRD) ='UNALLOCATED'
                 OR CTP_UID_GRD       IS NULL
                THEN 1
                ELSE 0
            END AS CTP_UID_FAIL_IND,
            CASE
                WHEN TRIM(CTP_UID_GRD) =''
                 OR CTP_UID_GRD       IS NULL
                 OR upper(CTP_UID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_UID_GRD
            END AS CTP_UID_VAL,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR upper(CTP_GFCID_GRD) ='NULL'
                 OR upper(CTP_GFCID_GRD) ='UNALLOCATED'
                 OR CTP_GFCID_GRD       IS NULL
                THEN 1
                ELSE 0
            END CTP_GFCID_GRD_FAIL_IND,
            CASE
                WHEN TRIM(CTP_GFCID_GRD) =''
                 OR CTP_GFCID_GRD       IS NULL
                 OR upper(CTP_GFCID_GRD) ='NULL'
                THEN 'NULL'
                ELSE CTP_GFCID_GRD
            END CTP_GFCID_GRD_FAIL_VAL,
            CASE
                WHEN ( ( FEED_SRC_SYS )= 'ATLAS'
                 OR ( FEED_SRC_SYS )   ='BRDRDGE'
                 OR ( FEED_SRC_SYS )   = 'BROADRIDGE'
                 OR ( FEED_SRC_SYS )   ='CNS'
                 OR ( FEED_SRC_SYS )   ='COPES-SG'
                 OR ( FEED_SRC_SYS )   ='COPES-TH'
                 OR ( FEED_SRC_SYS )   ='CTS'
                 OR ( FEED_SRC_SYS )   ='DOGS'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='GCS'
                 OR ( FEED_SRC_SYS )   ='IOWA'
                 OR ( FEED_SRC_SYS )   ='KOSMOS'
                 OR ( FEED_SRC_SYS )   ='MATCHBOOK'
                 OR ( FEED_SRC_SYS )   ='TML'
                 OR ( FEED_SRC_SYS )   ='NEWASKA'
                 OR ( FEED_SRC_SYS )   ='RADAR'
                 OR ( FEED_SRC_SYS )   ='SMS_Set'
                 OR ( FEED_SRC_SYS )   ='SMS_Exe'
                 OR ( FEED_SRC_SYS )   ='RTGSA')
                THEN 'CASH_SECURITIES'
                WHEN (( FEED_SRC_SYS )='OPENLINK_UK')
                THEN 'COMMODITIES'
                WHEN ( ( FEED_SRC_SYS )='DEPOTTRACS' )
                THEN 'FX'
                WHEN ( ( FEED_SRC_SYS )='FLXLAG'
                 OR ( FEED_SRC_SYS )   ='FLXORG3'
                 OR ( FEED_SRC_SYS )   ='FLXORG1'
                 OR ( FEED_SRC_SYS )   ='FLEXCUBELOANS')
                THEN 'LOANS'
                WHEN (( FEED_SRC_SYS )='OPICS CA'
                 OR ( FEED_SRC_SYS )  ='OPICS NY' )
                THEN 'MONEY_MARKETS'
                WHEN( ( FEED_SRC_SYS )='OASYS')
                THEN 'OTC_DERIVATIVES'
                ELSE 'OTHER'
            END PRODUCT,
            TRD_VOL_UNION.ACTL_MKT_OF_SETL_CD,
            TRD_VOL_UNION.ASET_LVL_KEY,
            TRD_VOL_UNION.ASET_LVL_ONE_DESC,
            'Q'
            || TO_CHAR(TRD_VOL_UNION.COB_DT,'Q-yyyy') COB_DT,
            TRD_VOL_UNION.CTP_ACCT_NO,
            TRD_VOL_UNION.CTP_CPI_ACCT_NO,
            TRD_VOL_UNION.CTP_GFCID_GRD,
            TRD_VOL_UNION.CTP_NAM,
            TRD_VOL_UNION.CTP_UID_GRD,
            TRD_VOL_UNION.CTP_UID_PP,
            TRD_VOL_UNION.CUSIP,
            TRD_VOL_UNION.EXPN_CD,
            TRD_VOL_UNION.FEED_SRC_SYS,
            TRD_VOL_UNION.FIRM_ACCT_NO,
            TRD_VOL_UNION.FO_GOC,
            TRD_VOL_UNION.ISIN,
            TRD_VOL_UNION.LGL_ENTY_ID_PP,
            TRD_VOL_UNION.LGL_ENTY_KEY,
            TRD_VOL_UNION.LGL_ENTY_NAM_PP,
            TRD_VOL_UNION.METRICS_CAT,
            TRD_VOL_UNION.MKT_OF_SETL_CD,
            TRD_VOL_UNION.OWN_CD,
            TRD_VOL_UNION.SEDOL,
            TRD_VOL_UNION.SRC_FILE_CD,
            TRD_VOL_UNION.TRAN_TYP
        FROM csmartvol.TRD_VOL_UNION partition for (to_date('%PART_DATE%','SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
        WHERE FEED_SRC_SYS <> 'SMS'
        AND FEED_SRC_SYS   <> 'EQDW'
        AND METRICS_CAT    <> 'Volumes Other'
            --AND ( ( TRD_VOL_UNION.COB_DT )   >= TRUNC(to_date('22-aug-2011'), 'MM') )
            --        AND ( ( COB_DT ) = '08-SEP-2011')
          --  AND ( ( TRD_VOL_UNION.COB_DT )             >= '01-JUN-2011')
           -- AND ( ( TRD_VOL_UNION.COB_DT )             <= '31-JUN-2011')
        )
    GROUP BY ACTL_MKT_OF_SETL_CD,
        ASET_LVL_KEY,
        ASET_LVL_ONE_DESC,
        COB_DT,
        CTP_ACCT_NO,
        CTP_CPI_ACCT_NO,
        CTP_GFCID_GRD,
        CTP_NAM,
        CTP_UID_GRD,
        CTP_UID_PP,
        CUSIP,
        EXPN_CD,
        FEED_SRC_SYS,
        FIRM_ACCT_NO,
        FO_GOC,
        ISIN,
        --ITEM_CNT,
        LGL_ENTY_ID_PP,
        LGL_ENTY_KEY,
        LGL_ENTY_NAM_PP,
        METRICS_CAT,
        MKT_OF_SETL_CD,
        OWN_CD,
        SEDOL,
        SRC_FILE_CD,
        TRAN_TYP,
        FO_GOC_FAIL_IND,
        FO_GOC_FAIL_VAL,
        ACTL_MOS_FAIL_IND,
        ACTL_MOS_FAIL_VAL,
        MOS_FAIL_IND,
        MOS_FAIL_VAL,
        ASET_LVL_KEY_FAIL_IND,
        ASET_LVL_KEY_FAIL_VAL,
        CTP_UID_FAIL_IND,
        CTP_UID_VAL,
        CTP_GFCID_GRD_FAIL_IND,
        CTP_GFCID_GRD_FAIL_VAL,
        PRODUCT) TRD_VOL_UNION_VW1,
        (SELECT
            CASE
                WHEN (trim(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL0DESC_FAIL_IND,
            CASE
                WHEN (TRIM(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC)=''
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='UNALLOCATED'
                 OR MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC       IS NULL
                 OR UPPER(MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC) ='NULL')
                THEN 1
                ELSE 0
            END AS AL1DESC_FAIL_IND,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_0_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_1_DESC,
            MAN_REF_ASET_LVL_DATA.ASET_LVL_KEY REF_ASET_LVL_KEY
        FROM csmartref.MAN_REF_ASET_LVL_DATA
        ) MAN_REF_ASET_LVL_DATA
    WHERE MAN_REF_ASET_LVL_DATA.REF_ASET_LVL_KEY(+)=TRD_VOL_UNION_VW1.ASET_LVL_KEY) TRD_VOL_UNION_ASET_VW1 ,
    (SELECT ROWNUM-1 n FROM   ( SELECT 1 just_a_column FROM dual CONNECT BY LEVEL <= 3)) a
        GROUP BY n,FEED_SRC_SYS ,
            PRODUCT,
            SRC_FILE_CD ,
            COB_DT ,
            DECODE(n,0,AL1_FAIL_VAL,1,AL1_FAIL_CNT,2,ALK_FAIL_CNT),
            DECODE(n,2,CUSIP ,null),
            DECODE(n,2,ISIN ,null),
            DECODE(n,2,SEDOL ,null),
            DECODE(n,2,ASET_LVL_ONE_DESC ,null);
   
]]>
      </sql_template>
    </sqlp>
  </exec_select>
</worker1>





</etldataflow>