<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="CREF_MT_PROD2QA1">
<globals>

        <!-- PIPELINE execution type
        SYNC - synchronous, ANYNC - asynchronous
        -->
        <param name="FLOW_TYPE" value="ASYNC"></param>

      <param name="FIELD_TERMINATOR" value='|'></param>
      <param name="LINE_TERMINATOR" value="~"></param>
      <param name="FROM_DB1" value="%CSMARTREF_SMARTU1B%"></param>
      <param name="TO_DB" value="%CSMARTREF_SMARTQ1%"></param>
      <param name="TO_SCHEMA" value="CSMARTREF"></param>

      <param name="ARRAYSIZE" value="5000"></param>
      <param name="COPYCOMMIT" value="4"></param>

          <param name="LAME_DUCK" value='0'></param>
       <param name="IF_TRUNCATE" value='1'></param>

                        --use these 2 to ensure index maintenance in DIRECT non-parallel mode load mode
                        <param name="SKIP_INDEX_MAINTENANCE" value="TRUE"></param>

                        <param name="IF_DPL_SERIAL" value="1"></param>
                        <param name="DPL_BINDSIZE" value="100000"></param>
                        --use this to REBUILD unusable indexes.
                        <param name="IF_REBUILD_UNUSABLE_INDEXES" value="1"></param>
</globals>

<!-- Worker for adjusted list to nested set hierarchy transform-->
<worker name="ESMARTREF.REF_CTP_GRAND_PRNT_LIST">
  --
  --	Spool your hierarchy to temp file
  --
  <exec_spool  name= "spool">
    <sqlp method="%SPOOL_METHOD%" >
	 <param name="FROM_DB1" value="%AB_SMARTP1B%"></param>
	 
	 <param name="SPOOL_HEADER_SIZE" value="1"></param>
	 <param name="FILTER1" value=" tree_lvl_no in (1,2,3,4,5,6,7)"></param>
	 <param name="ORDER_BY1" value="BCC_CHLD DESC"></param>
	  
		<sql_template>
        <![CDATA[ 
CSMARTREF.MAN_REF_OPS_OWN_HIER
]]>
      </sql_template>	  
    </sqlp>
  </exec_spool>

  --
  --	Load transformed from temp file to DB
  --
   <db_publisher >
   <sqlp method="%PUBLISHER_METHOD%" >
     <param name="TO_DB1" value="%AB_GMAD1%"></param>
	 <param name="IF_TRUNCATE" value="1"></param>
	 <param name="IF_DEBUG1" value="1"></param>
	 <param name="IF_SHOW_SERVEROUTPUT1" value="1"></param>
	 <param name="TO_TABLE" value="DELETE_MAN_REF_OPS_OWN_HIER"></param>
 	<sql_template>
        <![CDATA[ 
CSMARTREF.MAN_REF_OPS_OWN_HIER
]]>
    </sql_template>
   </sqlp>
  </db_publisher>    
</worker>

<worker1 name="CSMARTREF.MAN_REF_OPS_OWN_HIER1">
  <exec_copy>
    <sqlp   method="%COPY_METHOD%" >
<param name="TO_TABLE" value="DELETE_MAN_REF_OPS_OWN_HIER"></param>
<param name="IF_CONVENTIONAL" value="0"></param>
<param name="FILTER1" value=" CHNG_RQST_BY='Tracey Tan' and CHNG_SMRY='03/05/2012' and CRTD_BY='DW91853' and CRTD_TS='14-FEB-12 05.15.31.805942 PM' and REC_SID=1105681"></param>
      <sql_template>
	          <![CDATA[
CSMARTREF.MAN_REF_OPS_OWN_HIER
]]>
      </sql_template>
    </sqlp>
  </exec_copy>
</worker1>

<worker1 name="CSMARTREF.MAN_REF_OPS_OWN_HIER">
  <exec_spool>
    <sqlp   method="%SPOOL_METHOD%" >
<param name="TO_TABLE" value="DELETE_MAN_REF_OPS_OWN_HIER"></param>
<param name="IF_CONVENTIONAL" value="0"></param>
<param name="FILTER1" value=" CHNG_RQST_BY='Tracey Tan' and CHNG_SMRY='03/05/2012' and CRTD_BY='DW91853' and CRTD_TS='14-FEB-12 05.15.31.805942 PM' and REC_SID=1105681"></param>
      <sql_template>

        <![CDATA[
CSMARTREF.MAN_REF_OPS_OWN_HIER
]]>
      </sql_template>
    </sqlp>
  </exec_spool>
</worker1>

</etldataflow>
