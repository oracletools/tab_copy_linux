<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 . All rights reserved.
     Author: AlexBuzunov@gmail.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="PA_UNLOAD_40M_SYNC"  >
<globals>

	  <param name="ETLFLOW_DESCR" value="LEADER UNLOAD 2 sets of rows from TVU table."></param>
	  
	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="SYNC"></param>

	  <param name="FIELD_TERMINATOR" value="'|'"></param>
	  <param name="LINE_TERMINATOR" value="''"></param>
	  
	  <param name="DB_CONNECTOR" value="%PADB_DEPOT%"></param>
	  <param name="SCHEMA_NAME" value="PARACCEL"></param>
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->
	  
	  <param name="FROM_TABLE" value="TRD_VOL_UNION"></param>
	  
		<param name="NODE_LIMIT1" value="1111110"></param>
		<param name="NODE_LIMIT" value="555555"></param>
		<param name="NODE_LIMIT1" value="277777"></param>
		<param name="NODE_LIMIT1" value="10"></param>
		<param name="NODE_LIMIT1" value="50000"></param>
		<param name="TO_TABLE_0" value="TVU_LOAD_TEST4"></param>
		<param name="TO_TABLE_1" value="TVU_LOAD_TEST5"></param>
</globals>


<worker name="TT_2010">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >
	
      <sql_template>
        <![CDATA[TRUNCATE TABLE %TO_TABLE_0%]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>

<worker name="TT_2011">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >

      <sql_template>
        <![CDATA[TRUNCATE TABLE %TO_TABLE_1%]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>

<worker name="UNLOAD_2010">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >
	  
	   <param name="FILTER" value="  where cob_dt between ''2010-09-01'' and  ''2011-01-01'' "></param>
	   <param name="LEADER_UNLOAD" value="OFF"></param>
      <sql_template>
        <![CDATA[
		--unload
		set leader_unload=%LEADER_UNLOAD%;
		Unload ('select * from %FROM_TABLE% %FILTER% LIMIT %NODE_LIMIT%') to '/tmp/%TO_TABLE_0%_%NODE_LIMIT%.gz' GZIP delimiter '|';]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>


<worker name="UNLOAD_2011">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >

	  <param name="FILTER" value="  where cob_dt between ''2011-02-01'' and  ''2011-06-01'' "></param>
	  <param name="LEADER_UNLOAD" value="OFF"></param>
      <sql_template>
        <![CDATA[
		--unload
		set leader_unload=%LEADER_UNLOAD%;
		Unload ('select * from %FROM_TABLE% %FILTER% LIMIT %NODE_LIMIT%') to '/tmp/%TO_TABLE_1%_%NODE_LIMIT%.gz' GZIP delimiter '|';]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>

<worker name="LOAD_2010">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >

      <sql_template>
        <![CDATA[copy %TO_TABLE_0% from '$disk/tmp/%TO_TABLE_0%_%NODE_LIMIT%.gz'  GZIP parallel delimiter '|';]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>


<worker name="LOAD_2011">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >

      <sql_template>
        <![CDATA[copy %TO_TABLE_1% from '$disk/tmp/%TO_TABLE_1%_%NODE_LIMIT%.gz'  GZIP parallel delimiter '|';]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>

<worker name="LEAD_UNLOAD_2010">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >
	   <param name="LEADER_UNLOAD" value="ON"></param>
      <sql_template>
        <![CDATA[
		--unload
		set leader_unload=%LEADER_UNLOAD%;
		Unload ('select * from %TO_TABLE_0% ') to '/tmp/%TO_TABLE_0%_%NODE_LIMIT%.gz' GZIP delimiter '|';]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>


<worker name="LEAD_UNLOAD_2011">
  <exec_pa_dml>
    <psql 	method="%PA_DML_TEST%" >

	  <param name="LEADER_UNLOAD" value="ON"></param>
      <sql_template>
        <![CDATA[
		--unload
		set leader_unload=%LEADER_UNLOAD%;
		Unload ('select * from %TO_TABLE_1%') to '/tmp/%TO_TABLE_1%_%NODE_LIMIT%.gz' GZIP delimiter '|';]]>
      </sql_template>
    </psql>
  </exec_pa_dml>
</worker>


</etldataflow>